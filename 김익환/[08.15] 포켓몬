// 프로그래머스_LV1_해쉬_포켓몬

/*
풀이>
// 배열을 이용한 풀이
  visit 배열을 사용해 중복선택을 방지했고, answer 변수가 N/2 보다 작을때까지 포켓몬을 추가하도록 하여 최대 선택 수를 반환하도록 하였다.

// unordered_set 을 사용한 풀이
  중복이 허락되지 않는 unordered_set 에 nums의 모든 항목을 추가하여 
  unordered_set의 크기기 nums/2보다 크거나 같을 경우, answer = nums/2 로 
  unordered_set의 크기가 nums/2보다 작을 경우, answer = (unordered_set)변수.size() 로 하여
  답을 구했다.

*/


// 배열을 이용한 풀이
#include <vector>
using namespace std;

int solution(vector<int> nums)
{
    int answer = 0;
    int visit[200001] = {0,};
    
    for(int i = 0; i<nums.size(); i++) {
        if (visit[nums[i]] == 0 && answer < nums.size()/2) {
            visit[nums[i]] = 1;
            answer++;
        }
    }
    
    return answer;
}



// unordered_set 을 사용한 풀이
#include <vector>
#include <unordered_set>
using namespace std;

int solution(vector<int> nums)
{
    int answer = 0;
    int pocketmon_size = nums.size();
    unordered_set<int> pocketmon;
    
    for(const auto& i : nums) {
        pocketmon.insert(i);
    }
    
    if (pocketmon.size() >= pocketmon_size/2)
        answer = pocketmon_size/2;
    else
        answer = pocketmon.size();
    
    return answer;
}
